<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>blogeo</title>
    <link>https://geonnave.github.io/</link>
    <description>Recent content on blogeo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 28 May 2016 22:25:31 -0300</lastBuildDate>
    
	<atom:link href="https://geonnave.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Em Frente, Enfrente: a Trovoada</title>
      <link>https://geonnave.github.io/posts/em-frente-enfrente-a-trovoada/</link>
      <pubDate>Sat, 28 May 2016 22:25:31 -0300</pubDate>
      
      <guid>https://geonnave.github.io/posts/em-frente-enfrente-a-trovoada/</guid>
      <description>Essa noite tive um sonho desses que a gente acorda depois e dá risada do quão maluca pode ser a nossa mente. Envolvia praia, ondas que foram aumentando, e então uma tempestade no horizonte, acompanhada de um tornado que se aproximou mais depressa que o esperado. Era como um raio laser do céu. Não fazia tanto vento no fim das contas, mas rasgava a areia deixando um rastro de retro-escavadeira no chão.</description>
    </item>
    
    <item>
      <title>How gen_server works: implementing a subset of it in Elixir</title>
      <link>https://geonnave.github.io/posts/how-genserver-works/</link>
      <pubDate>Fri, 22 Apr 2016 21:27:45 -0300</pubDate>
      
      <guid>https://geonnave.github.io/posts/how-genserver-works/</guid>
      <description>Elixir, the language built to run on Erlang VM, brings all the awesome and solid parts of Erlang, whilst it also adds new cool features. My goal with this writing is to use Elixir to explore the inner workings of one of the decades-old Erlang/OTP behavior: the gen_server (which, in Elixir land, is called GenServer).
First, a bit of context. I’ve read Joe Armstrong’s PhD thesis “Making reliable distributed systems in the presence of software errors” where he makes a magnific explanation of a generic server for Erlang using processes, higher order functions and pattern-matching.</description>
    </item>
    
    <item>
      <title>Do Sonho de Piá, Encontro com a Trovoada e a Primeira Viagem</title>
      <link>https://geonnave.github.io/posts/sonho-de-pia/</link>
      <pubDate>Tue, 01 Dec 2015 19:20:12 -0300</pubDate>
      
      <guid>https://geonnave.github.io/posts/sonho-de-pia/</guid>
      <description>Outro dia realizei um sonho de piá. Comprei uma moto, daquelas que os rockerão dos filmes e o Exterminador do Futuro tinham. Não, não é uma Harley, mas tem o estilo custom e foi suficiente pra dar aquele gelo no coração no dia em que a adotei.
Este fatídico dia vai ficar pra sempre na memória. Morando em São Paulo, na capital, pulei da cama antes do sol nascer e fui pra rodoviária.</description>
    </item>
    
    <item>
      <title>Geovane Fedrecheski</title>
      <link>https://geonnave.github.io/about/</link>
      <pubDate>Sun, 21 Mar 1993 00:00:00 -0300</pubDate>
      
      <guid>https://geonnave.github.io/about/</guid>
      <description>You can call me Geo :)</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>https://geonnave.github.io/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://geonnave.github.io/projects/</guid>
      <description> primg A tool that generates prime numbers whose binary representation looks like any image.
Link: http://geonnave.github.io/primg/
Source: https://github.com/geonnave/primg
WooLed A led panel made with an wooden structure, an arduino, shift registers, and a lot of wiring. See it in action in this video.
  -- </description>
    </item>
    
  </channel>
</rss>